dia <- c(01, 01, 02, 02, 02, 02, 03, 03, 03, 04, 04, 04, 05, 05, 06, 06, 06, 06, 07, 07, 07, 07, 07, 08, 08, 08, 08, 09, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15)
cidade <- c('Campinas', 'Vinhedo', 'Campinas', 'Limeira', 'Campinas', 'Vinhedo', 'Campinas', 'Vinhedo', 'Limeira', 'Campinas', 'Vinhedo', 'Limeira', 'Campinas', 'Vinhedo', 'Campinas', 'Vinhedo', 'Campinas', 'Vinhedo', 'Vinhedo', 'Campinas', 'Vinhedo', 'Vinhedo', 'Limeira', 'Limeira', 'Campinas', 'Vinhedo', 'Limeira', 'Campinas', 'Vinhedo', 'Campinas', 'Limeira', 'Vinhedo', 'Campinas', 'Vinhedo', 'Campinas', 'Limeira', 'Vinhedo', 'Limeira', 'Vinhedo', 'Campinas', 'Limeira', 'Vinhedo', 'Limeira', 'Campinas', 'Limeira', 'Limeira', 'Campinas', 'Campinas', 'Limeira', 'Limeira')
chuva <- c(0.15, 0.02, 0.01, 0.13, 0.12, 2.19, 1.11, 0.76, 2.98, 0.45, 2.63, 0.76, 0.38, 1.26, 2.57, 0.54, 9.87, 3.41, 2.96, 1.37, 6.78, 13.87, 0.11, 1.84, 12.19, 2.86, 11.99, 2.01, 2.32, 11.2, 0.48, 4.33, 13.32, 1.05, 0.56, 1.92, 1.81, 7.66, 2.93, 1.17, 0.7, 2.95, 0.37, 1.08, 1.31, 3.22, 0.49, 1.86, 2.3, 7.65)
df <- data.frame(dia, cidade, chuva)
groupsum <- function(df, colgroup, colsum){
teste <- data.frame(tapply(df[[colsum]], df[[colgroup]], sum))
novo_df <- data.frame(teste)
novo_df$coluna <- rownames(novo_df)
return(novo_df)
}
groupsum(df, "cidade", "chuva")
groupsum <- function(df, col1, col2){
if(!is.numeric(df[,col2])){
cat('A variavel Col2 deve ser numerica.')
} else {
tmp <- tapply(df[,col2], chuvas[,col1], sum)
res <- data.frame(col1 = names(tmp), tmp, row.names = NULL)
colnames(res) <- c(col1, col2)
return(res)
}
}
##### Exemplos no PDF:
dia <- c(01, 01, 02, 02, 03, 03, 04, 04, 05, 05)
cidade <- c('Campinas', 'Vinhedo', 'Campinas', 'Limeira', 'Campinas', 'Vinhedo', 'Campinas', 'Vinhedo', 'Limeira', 'Campinas')
chuva <- c(0.15, 0.02, 0.01, 0.13, 0.12, 2.19, 1.11, 0.76, 2.98, 0.45)
chuvas <- data.frame(cidade, dia, chuva)
groupsum(chuvas, "cidade", "chuva")
wordCount <- function(word, text){
text <- gsub("[.|,|!]","",text)
text <- tolower(text)
tam <- sapply(strsplit(text, " "), length)
text <- strsplit(text, " ")[[1]]
result <- 0
for (i in 1:tam) {
if (text[i] == word) {
result <- result + 1
}
}
return(result)
}
##### Exemplos no PDF:
text <- "O rAto roeu a roupa do Rei de Roma! RainhA raivosa rasgou o resto."
wordCount("rato", text)
wordCount("roma", text)
text <- "A vaca malHada foi molhADA por outra VACA, MOLhada e MALhaDa."
wordCount("outra", text)
wordCount("vaca", text)
wordCount("malhada", text)
text <- "Se a liga me ligasse, eu tambem ligava a liga. Mas a liga nao me liga, eu tambem nao ligo a liga."
wordCount("liga", text)
wordCount("ligasse", text)
df <- url(https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv)
df <- url('https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv')
head(df)
class(df)
con <- url('https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv')
df <- read.csv(con)
head(df)
con <- url('https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv')
names <- c("horario", "temp", "vento", "umid", "sensa")
df <- read.csv(con, header = FALSE , 5 + sep = ";", col.names = names)
con <- url('https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv')
names <- c("horario", "temp", "vento", "umid", "sensa")
df <- read.csv(con, header = FALSE , sep = ";", col.names = names)
head(df)
str(df)
con <- url('https://www.ic.unicamp.br/~zanoni/cepagri/cepagri.csv')
names <- c("horario", "temp", "vento", "umid", "sensa")
df <- read.csv(con, header = FALSE , sep = ";", col.names = names, skip=42082, nrows=311922)
head(df)
tail(df)
# Verificando leituras válidas x inválidas
nrow(df)
dados_validos = df[!is.na(df$sensa)]
df$sensa
dados_validos = df[!is.na(df$sensa),]
nrow(dados_validos)
# Verificando leituras válidas x inválidas
nrow(df)
dados_validos = df[!is.na(df$sensa),]
nrow(dados_validos)
print('Portentagem de dados removidos:')
print( (nrows_df-nrows_validas)/(nrows_df+nrows_validas) )
# Verificando leituras válidas x inválidas
nrows_df <- nrow(df)
dados_validos <- df[!is.na(df$sensa),]
nrows_validas <- nrow(dados_validos)
print('Portentagem de dados removidos:')
print( (nrows_df-nrows_validas)/(nrows_df+nrows_validas) )
print( (nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100 )
print( round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100,2) )
print(pras('Portentagem de dados removidos:',perc_removidas)
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100,2) )
print(pras('Portentagem de dados removidos:',perc_removidas)
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100,2) )
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100,2) )
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100.0, 2) )
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100.0, 2)
print(pras('Portentagem de dados removidos:', perc_removidas)
print(pras('Portentagem de dados removidos:', str(perc_removidas))
print(pras('Portentagem de dados removidos:', perc_removidas)
print(paste('Portentagem de dados removidos:', perc_removidas)
print(paste('Portentagem de dados removidos:', perc_removidas)
print(paste("Portentagem de dados removidos:", perc_removidas)
print(paste("Portentagem de dados removidos:", perc_removidas))
print(paste("Portentagem de dados removidos:", perc_removidas,'%'))
print("Total de linhas lidas:", nrows_df)
print(paste("Total de linhas lidas:", nrows_df))
print(paste("Portentagem de dados removidos:", perc_removidas,'%'))
class(dados_validos$temp)
# Tratamento de dados
dados_validos$temp <- as.numeric(dados_validos$temp)
class(dados_validos$temp)
colnames(dados_validos)
summary(dados_validos)
# Remoção de outirliers
dados_validos <- dados_validos[dados_validos$sensa > 0 & dados_validos$sensa < 99]
# Remoção de outirliers
dados_validos <- dados_validos[dados_validos$sensa > 0 & dados_validos$sensa < 99, ]
summary(dados_validos)
# Verificando leituras válidas x inválidas
nrows_df <- nrow(df)
dados_validos <- df[!is.na(df$sensa),]
nrows_validas <- nrow(dados_validos)
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100.0, 2)
print(paste("Total de linhas lidas:", nrows_df))
print(paste("Portentagem de dados removidos:", perc_removidas,'%'))
# Tratamento de dados
dados_validos$temp <- as.numeric(dados_validos$temp)
summary(dados_validos)
# Remoção de outirliers
#dados_validos <- dados_validos[dados_validos$sensa > 0 & dados_validos$sensa < 99, ]
dados_validos[dados_validos$sensa == 99.9, 5] <- NA
summary(dados_validos)
agora <- Sys.time(); agora
unclass(agora)
agora
names(agora)
names(unclass(agora))
class(agora)
agora <- as.POSIXlt(agora
agora <- as.POSIXlt(agora)
agora <- as.POSIXlt(agora)
agora
class(agora)
names(unclass(agora))
unclass(agora)
cepagri[ , 1] <- as.POSIXct(cepagri[ , 1], format = '%d/%m/%Y-%H:%M', tz = "America/Sao_Paulo")
# Verificando leituras válidas x inválidas
nrows_df <- nrow(df)
cepagri <- df[!is.na(df$sensa),]
nrows_validas <- nrow(cepagri)
perc_removidas <- round((nrows_df-nrows_validas)/(nrows_df+nrows_validas)*100.0, 2)
print(paste("Total de linhas lidas:", nrows_df))
print(paste("Portentagem de dados removidos:", perc_removidas,'%'))
# Tratamento de dados
cepagri$temp <- as.numeric(cepagri$temp)
summary(cepagri)
# Remoção de outirliers
#cepagri <- cepagri[cepagri$sensa > 0 & cepagri$sensa < 99, ]
cepagri[cepagri$sensa == 99.9, 5] <- NA
summary(cepagri)
agora <- Sys.time(); agora
cepagri[ , 1] <- as.POSIXct(cepagri[ , 1], format = '%d/%m/%Y-%H:%M', tz = "America/Sao_Paulo")
str(cepagri)
str(dados_validos)
cepagri$horario
str(cepagri)
cepagri$year
cepagri$horario$year
(cepagri$horario)$year
unclass(cepagri$horario)$year
# Feature Eng
cepagri$horario <- as.POSIXlt(cepagri$horario)
unclass(cepagri$horario)
(cepagri$horario)
head(unclass(cepagri$horario))
cepagri$ano <- unclass(cepagri$horario)$year + 1900
summary(cepagri)
cepagri$mes <- unclass(cepagri$horario)$month + 1
cepagri$mes <- unclass(cepagri$horario)$month + 1
# Feature Eng
cepagri$horario <- as.POSIXlt(cepagri$horario)
cepagri$mes <- unclass(cepagri$horario)$month + 1
cepagri$mes <- unclass(cepagri$horario)$mon + 1
summary(cepagri)
logical(3)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela] == vetor[i])){
resposta[i:i+janela] = TRUE
i <- i+janela-1
}
}
}
consecutive(entrada, 2)
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela] == vetor[i])){
resposta[i:i+janela] = TRUE
i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela] == vetor[i])){
resposta[i:i+janela] <- TRUE
i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela] == vetor[i])){
resposta[i:i+janela+1] <- TRUE
i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela] == vetor[i])){
resposta[i:i+janela] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
entrada[4:5]
entrada[4:5] == entrada[4]
all(entrada[4:5] == entrada[4])
all(entrada[4:6] == entrada[4])
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(paste('resposta:',resposta))
print(paste('vetor:',vetor))
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta))
print(vetor))
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta))
print(vetor))
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor))
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor)
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor)
print(paste('janela:',janela))
for(i in 1:tamanho-janela){
print(i)
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
consecutive <- function(vetor, janela){
consecutive <- function(vetor, janela){
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor)
print(paste('janela:',janela))
for(i in 1:(tamanho-janela){
print(i)
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor)
print(paste('janela:',janela))
for(i in 1:(tamanho-janela)){
print(i)
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
consecutive <- function(vetor, janela){
tamanho <- length(vetor)
resposta <- logical(tamanho)
print(paste('tamanho:',tamanho))
print(resposta)
print(vetor)
print(paste('janela:',janela))
for(i in 1:(tamanho-janela)){
print(i)
if(all(vetor[i:i+janela-1] == vetor[i])){
resposta[i:i+janela-1] <- TRUE
#i <- i+janela-1
}
}
return(resposta)
}
entrada = c(1,2,3,4,4,5,5,6,7,8,8,9,10,11,11,11,12,12,12,12)
consecutive(entrada, 2)
r <- consecutive(entrada, 2)
print(r)
